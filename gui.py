from tkinter import *
from tkinter import ttk
import customtkinter
import tempfile
import os
import x
from realTimeMonitoring import RTM
from tkinter import filedialog
import sys
import time
import logging
from watchdog.observers import Observer
from watchdog.events import LoggingEventHandler
from engine import Engine
from sanboxapi import dynamic
import json 
from spamCheck import predict as sp

root = customtkinter.CTk()
root.title("Antivirus")
root.geometry("1000x1000")

mal_file = tempfile.NamedTemporaryFile(dir=os.getcwd())
mal_file_name = mal_file.name.split("\\")[-1]
customtkinter.set_default_color_theme("blue")
root.config(bg='black')

class DeleteButton:
    def __init__(self, master, file_name):
        self.button = Button(master=master, text="Delete this file", command=lambda:removeFile(file_name))
        self.file_name = file_name

label1 = Label(root, text="This is an antivirus developed by the students of VIT, Chennai Campus",font=('Times', 24),background="black",
                 foreground="white")
label1.pack()

def removeFile():
    mal_file.seek(0)
    try:
        for line in mal_file:
            file_name = line.decode("utf-8").strip()        
            os.remove(file_name)
    except Exception as e:
        print("Some error occured")
    finally:
        Label(root, text="Done").pack()

def scan():
    frame = Frame(root)
    frame.pack()
    Label(frame,text="Scanning in progress..",font=('Times', 24)).pack(padx=20,pady=20)
    e=Engine()
    out=e.folderScanner()
    for lines in out:
        Label(frame, text=lines,font=('Times', 24),background="black",foreground="white").pack(padx=20,pady=20)
    
    # print(e.folderScanner())

def display():
    Label(root, text="The following files are malicious", fg="red").pack()
    frame = Frame(root)
    frame.pack()
    print("Inside the display function")
    mal_file.seek(0)
    for line in mal_file:
        Label(frame, text=line.decode("utf-8").strip(), fg="red").pack()
        print(line)
    Button(frame, text="Delete these files", command=removeFile).pack()

def select_file(my_string_var):
   path = filedialog.askdirectory()
#    path= filedialog.askopenfilename(title="Select a File", filetype=(('text files''*.txt'),('all files','*.*')))
   os.chdir(path)
   my_string_var.set(path)
   print(path)

def showrtm():
    Label(root, text="The following files are malicious", fg="red").pack()
    frame = Frame(root)
    frame.pack()
    
    logging.basicConfig(filename="std.log",level=logging.INFO,
                            format='%(asctime)s - %(message)s',
                             datefmt='%Y-%m-%d %H:%M:%S')
    
    path = 'C:\\Users\\VAISHNAVI SHUKLA'
    event_handler = LoggingEventHandler()

    observer = Observer()
    observer.schedule(event_handler, path, recursive=True)

    observer.start()
    
    logfile=open("std.log",'r')
    logfile.seek(0)
    for lines in logfile:
        Label(frame, text=lines, fg="red").pack()
        print(lines)
    try:
        while True:
                time.sleep(1)
    finally:
        observer.stop()
        observer.join()
    
def cacherem():
    print("called this function")
    Label(root, text="The following files are being removed", font=('Times', 24),background="black",foreground="white").pack()
    frame = Frame(root)
    frame.pack()
    e=Engine()
    Label(frame, text=e.CacheFileRemover(),font=('Times', 24),background="black",foreground="white").pack(padx=20,pady=20)
    print(e.CacheFileRemover())
    # out.seek(0)
    # for line in out:
    #     Label(frame, text=line.decode("utf-8").strip(), fg="red").pack()
    #     print(line)

def dyn(path):
    print("called this function")
    Label(root, text="Follwing is the report: (This may take a while..)", fg="red").pack()
    frame = Frame(root)
    frame.pack()
    d=dynamic()
    json_val = json.loads(d.dynamicAnalysis(path))
    for lines in json_val:
        Label(frame, text=lines, fg="red").pack()
    print(d.dynamicAnalysis(path))

def dync():
    path=entry1.get()
    if len(path)==0:
        return 0
    else:
        print("pressing button")
        dyn(path)

def getSpamResult(text,email_var):
    result = sp(text)
    print(result)
    email_var.set(result)

my_string_var = StringVar()
email_var = StringVar()

if __name__ == "__main__":
    # Label(root, textvariable=my_string_var,font=('Times', 24)).pack(padx=20,pady=20)
    # customtkinter.CTkButton(master=root, text="Browse your system to locate a directory to scan", command=lambda: select_file(my_string_var),font=('Times', 24)).pack(padx=20,pady=20)
    customtkinter.CTkButton(master=root, text="Scan your device", command=scan,font=('Times', 24)).pack(padx=20,pady=20)
    customtkinter.CTkButton(master=root,text="Real Time monitoring",command=showrtm,font=('Times', 24)).pack(padx=20,pady=20)
    customtkinter.CTkButton(master=root,text="Cache removal",command=cacherem,font=('Times', 24)).pack(padx=20,pady=20)
    label2 = Label(root, text="enter directory to the file you wish to scan",font=('Times', 24),background="black", foreground="white")
    label2.pack(padx=20,pady=20)
    entry1= Entry(root, width= 40, font=('Times', 24))
    entry1.focus_set()
    entry1.pack(padx=20,pady=20)
    customtkinter.CTkButton(root,text="Dynamic Analysis",font=('Times', 24),command=dync).pack(padx=20,pady=20)
    label3 = Label(root, text="Enter email to check if it is spam or not", font=('Times', 24), background="black", foreground="white")
    label3.pack(padx=20,pady=20)
    entry2= Entry(root, width= 40, font=('Times', 24))
    entry2.focus_set()
    entry2.pack(padx=20,pady=20)
    customtkinter.CTkButton(root,text="Check spam",font=('Times', 24),command=lambda: getSpamResult(entry2.get(), email_var)).pack(padx=20,pady=20)
    label4 = Label(root, textvariable=email_var, font=('Times', 24),background="black", foreground="white").pack(padx=20, pady=20)
    root.mainloop()
    mal_file.close()