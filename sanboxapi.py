import sys
import time
import pprint
from sandboxapi import fireeye,falcon,vmray,wildfire,opswat,triage

# connect to the sandbox
# sandbox=falcon.FalconAPI('LkvTL4nQd8bXv26aSggGJdbaK3CuEmTrJEH6DZOFNBM', url='https://www.reverse.it/api/v2', env=100)
class dynamic:
    def dynamicAnalysis(self,path):
        sandbox=opswat.OpswatAPI('19e066b6b602ea47c72d9bc9b4cb907b', 'windows7', verify_ssl=True)

        # verify connectivity
        if not sandbox.is_available():
            print("sandbox is down, exiting")
            sys.exit(1)

        filename="SeagateToolkit.exe"
        # submit a file
        with open(path, "r",encoding="latin-1") as handle:
            file_id = sandbox.analyze(handle, "SeagateToolkit.exe")
            print("file {f} submitted for analysis, id {i}".format(f=filename, i=file_id))

        report = sandbox.report(file_id)
        pprint.pprint(report)
        return report
